[globalOptions]
# Set the input directory map in an absolute path.
# - The input forcing and parameter directories will be relative to this. # YOU HAVE TO CHANGE THIS #
inputDir = MAIN_OUTPUT_DIR/input/30min/RhineMeuse/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
cloneMap = cloneMaps/RhineMeuse30min.map

# The area/landmask of interest:
landmask = None
# If None, area/landmask is limited for cells with ldd value.

# Set the output directory in an absolute path. # YOU HAVE TO CHANGE THIS #
outputDir = MAIN_OUTPUT_DIR/output/RhineMeuse_30min_non-natural/

# spin-up output directory
spinUpOutputDir = True

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output
description = test version (by Edwin H. Sutanudjaja)

startTime = 2000-01-01
endTime   = 2000-12-31
# Format: YYYY-MM-DD ; The current model runs on the daily time step.

# spinning up options:
maxSpinUpsInYears = 1
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5
minConvForTotlSto = 0.5

[meteoOptions]
# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = meteo/forcing/daily_precipitation_cru_era-interim_2000_to_2010.nc
temperatureNC   = meteo/forcing/daily_temperature_cru_era-interim_2000_to_2010.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Hamon
refETPotFileNC = None

[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 2

topographyNC     = landSurface/topography/topography_parameters_30_arcmin_october_2015.nc
soilPropertiesNC = landSurface/soil/soilProperties.nc

includeIrrigation = True
# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
historicalIrrigationArea = waterUse/irrigation/irrigated_areas/irrigationArea30ArcMin.nc
# a pcraster map/value defining irrigation efficiency (dimensionless) - optional
irrigationEfficiency     = waterUse/irrigation/irrigation_efficiency/efficiency.map

includeDomesticWaterDemand  = True
includeIndustryWaterDemand  = True
includeLivestockWaterDemand = True
# domestic, industrial and livestock water demand data (unit must be in m.day-1)
domesticWaterDemandFile  = waterUse/waterDemand/domestic_water_demand_version_october_2014.nc
industryWaterDemandFile  = waterUse/waterDemand/industrial_water_demand_version_october_2014.nc
livestockWaterDemandFile = waterUse/waterDemand/livestock_water_demand_1960-2012.nc

# desalination water supply (maximum/potential/capacity)
desalinationWater = waterUse/desalination/desalination_water_use_version_october_2014.nc
# zone IDs (scale) at which allocations of groundwater and surface water (as well as desalinated water) are performed  
allocationSegmentsForGroundSurfaceWater = waterUse/abstraction_zones/abstraction_zones_60min_30min.map

# pcraster maps defining the partitioning of groundwater - surface water source
# - predefined surface water - groundwater partitioning for irrigation demand (e.g. based on Siebert, Global Map of Irrigation Areas version 5)
irrigationSurfaceWaterAbstractionFractionData           = waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_SWFRAC.map
# -- quality map
irrigationSurfaceWaterAbstractionFractionDataQuality    = waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_QUAL.map

# - threshold values defining the preference for surface water source for irrigation purpose
# -- treshold to maximize surface water irrigation use (cells with irrSurfaceWaterAbstractionFraction above this will prioritize irrigation surface water use)
treshold_to_maximize_irrigation_surface_water           = 0.50
# -- treshold to minimize fossil water withdrawal for irrigation (cells with irrSurfaceWaterAbstractionFraction below this have no fossil withdrawal for irrigation)
treshold_to_minimize_fossil_groundwater_irrigation      = 0.70

# - predefined surface water - groundwater partitioning for non irrigation demand (e.g. based on McDonald, 2014)
maximumNonIrrigationSurfaceWaterAbstractionFractionData = waterUse/source_partitioning/surface_water_fraction_for_non_irrigation/max_city_sw_fraction.map

[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

landCoverMapsNC  = landSurface/landCover/naturalTall/forestProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = landSurface/landCover/naturalTall/Global_CropCoefficientKc-Forest_30min.nc
interceptCapNC    = landSurface/landCover/naturalTall/interceptCapInputForest366days.nc
coverFractionNC   = landSurface/landCover/naturalTall/coverFractionInputForest366days.nc

# initial conditions:
interceptStorIni = initialConditions/non-natural/original/1999/interceptStor_forest_1999-12-31.map
snowCoverSWEIni  = initialConditions/non-natural/original/1999/snowCoverSWE_forest_1999-12-31.map
snowFreeWaterIni = initialConditions/non-natural/original/1999/snowFreeWater_forest_1999-12-31.map
topWaterLayerIni = initialConditions/non-natural/original/1999/topWaterLayer_forest_1999-12-31.map
storUppIni       = initialConditions/non-natural/original/1999/storUpp_forest_1999-12-31.map
storLowIni       = initialConditions/non-natural/original/1999/storLow_forest_1999-12-31.map
interflowIni     = initialConditions/non-natural/original/1999/interflow_forest_1999-12-31.map

[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

landCoverMapsNC  = landSurface/landCover/naturalShort/grasslandProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = landSurface/landCover/naturalShort/Global_CropCoefficientKc-Grassland_30min.nc
interceptCapNC    = landSurface/landCover/naturalShort/interceptCapInputGrassland366days.nc
coverFractionNC   = landSurface/landCover/naturalShort/coverFractionInputGrassland366days.nc

# initial conditions:
interceptStorIni = initialConditions/non-natural/original/1999/interceptStor_grassland_1999-12-31.map
snowCoverSWEIni  = initialConditions/non-natural/original/1999/snowCoverSWE_grassland_1999-12-31.map
snowFreeWaterIni = initialConditions/non-natural/original/1999/snowFreeWater_grassland_1999-12-31.map
topWaterLayerIni = initialConditions/non-natural/original/1999/topWaterLayer_grassland_1999-12-31.map
storUppIni       = initialConditions/non-natural/original/1999/storUpp_grassland_1999-12-31.map
storLowIni       = initialConditions/non-natural/original/1999/storLow_grassland_1999-12-31.map
interflowIni     = initialConditions/non-natural/original/1999/interflow_grassland_1999-12-31.map

[irrPaddyOptions]
name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

cropCoefficientNC = landSurface/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc
landCoverMapsNC  = landSurface/landCover/irrPaddy/paddyProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.2

# initial conditions:
interceptStorIni = initialConditions/non-natural/original/1999/interceptStor_irrPaddy_1999-12-31.map
snowCoverSWEIni  = initialConditions/non-natural/original/1999/snowCoverSWE_irrPaddy_1999-12-31.map
snowFreeWaterIni = initialConditions/non-natural/original/1999/snowFreeWater_irrPaddy_1999-12-31.map
topWaterLayerIni = initialConditions/non-natural/original/1999/topWaterLayer_irrPaddy_1999-12-31.map
storUppIni       = initialConditions/non-natural/original/1999/storUpp_irrPaddy_1999-12-31.map
storLowIni       = initialConditions/non-natural/original/1999/storLow_irrPaddy_1999-12-31.map
interflowIni     = initialConditions/non-natural/original/1999/interflow_irrPaddy_1999-12-31.map

[irrNonPaddyOptions]
name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

cropCoefficientNC = landSurface/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc
landCoverMapsNC  = landSurface/landCover/irrNonPaddy/nonPaddyProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.5

# initial conditions:
interceptStorIni = initialConditions/non-natural/original/1999/interceptStor_irrNonPaddy_1999-12-31.map
snowCoverSWEIni  = initialConditions/non-natural/original/1999/snowCoverSWE_irrNonPaddy_1999-12-31.map
snowFreeWaterIni = initialConditions/non-natural/original/1999/snowFreeWater_irrNonPaddy_1999-12-31.map
topWaterLayerIni = initialConditions/non-natural/original/1999/topWaterLayer_irrNonPaddy_1999-12-31.map
storUppIni       = initialConditions/non-natural/original/1999/storUpp_irrNonPaddy_1999-12-31.map
storLowIni       = initialConditions/non-natural/original/1999/storLow_irrNonPaddy_1999-12-31.map
interflowIni     = initialConditions/non-natural/original/1999/interflow_irrNonPaddy_1999-12-31.map


[groundwaterOptions]
debugWaterBalance = True

# a netcdf file containing kSatAquifer (m/day), specificYield (dimensionless) and recessionCoeff (day-1)
groundwaterPropertiesNC = groundwater/properties/groundwaterProperties.nc
# - minimum value for groundwater recession coefficient (day-1) 
minRecessionCoeff = 1.0e-4

limitFossilGroundWaterAbstraction      = True
estimateOfRenewableGroundwaterCapacity = 0.0
estimateOfTotalGroundwaterThickness    = groundwater/aquifer_thickness_estimate/thickness_30min.map
minimumTotalGroundwaterThickness       = 100.
maximumTotalGroundwaterThickness       = None

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
pumpingCapacityNC = waterUse/groundwater_pumping_capacity/regional_abstraction_limit.nc
# zonal IDs (scale) at which zonal allocation of groundwater is performed  
allocationSegmentsForGroundwater = waterUse/abstraction_zones/abstraction_zones_30min_30min.map
# assumption for the minimum transmissivity value (unit: m2/day) that can be extracted (via capillary rise and/or groundwater abstraction) - optional
# - if None, abstraction and/or capillary rise can always occur everywhere and unlimited
minTransimissivityForProductiveAquifer    = 50.0

# initial conditions:
storGroundwaterIni                        = initialConditions/non-natural/original/1999/storGroundwater_1999-12-31.map
storGroundwaterFossilIni                  = initialConditions/non-natural/original/1999/storGroundwaterFossil_1999-12-31.map

# additional initial conditions for pumping behaviors
avgNonFossilGroundwaterAllocationLongIni  = initialConditions/non-natural/original/1999/avgNonFossilGroundwaterAllocationLong_1999-12-31.map
avgNonFossilGroundwaterAllocationShortIni = initialConditions/non-natural/original/1999/avgNonFossilGroundwaterAllocationShort_1999-12-31.map
avgTotalGroundwaterAbstractionIni         = initialConditions/non-natural/original/1999/avgTotalGroundwaterAbstraction_1999-12-31.map
avgTotalGroundwaterAllocationLongIni      = initialConditions/non-natural/original/1999/avgTotalGroundwaterAllocationLong_1999-12-31.map
avgTotalGroundwaterAllocationShortIni     = initialConditions/non-natural/original/1999/avgTotalGroundwaterAllocationShort_1999-12-31.map

[routingOptions]
debugWaterBalance = True

lddMap      = routing/ldd_and_cell_area/lddsound_30min.map
cellAreaMap = routing/ldd_and_cell_area/cellarea30min.map

# routing method: (options are kinematicWave, simplifiedKinematicWave and accuTravelTime)
routingMethod = accuTravelTime
# manning coefficient
manningsN   = 0.04

# channel gradient
gradient             = routing/channel_properties/channel_gradient.map
# constant channel depth 
constantChannelDepth = routing/channel_properties/bankfull_depth.map
# constant channel width (optional)
constantChannelWidth = routing/channel_properties/bankfull_width.map
# minimum channel width (optional)
minimumChannelWidth  = routing/channel_properties/bankfull_width.map

# Option for flood plain simulation
dynamicFloodPlain = True
# manning coefficient for floodplain
floodplainManningsN = 0.07
# channel properties for flooding
bankfullCapacity = None
# - If None, it will be estimated from (bankfull) channel depth (m) and width (m) 

# files for relative elevation (above minimum dem) 
relativeElevationFiles  = routing/channel_properties/dzRel%04d.map
relativeElevationLevels = 0.0, 0.01, 0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.00

# lake and reservoir parameters
waterBodyInputNC = routing/surface_water_bodies/waterBodies30min.nc
onlyNaturalWaterBodies = False

# composite crop factors for WaterBodies:
cropCoefficientWaterNC = routing/kc_surface_water/cropCoefficientForOpenWater.nc
minCropWaterKC         = 0.20

# initial conditions:
waterBodyStorageIni            = initialConditions/non-natural/original/1999/waterBodyStorage_1999-12-31.map
channelStorageIni              = initialConditions/non-natural/original/1999/channelStorage_1999-12-31.map
readAvlChannelStorageIni       = initialConditions/non-natural/original/1999/readAvlChannelStorage_1999-12-31.map
avgDischargeLongIni            = initialConditions/non-natural/original/1999/avgDischargeLong_1999-12-31.map
avgDischargeShortIni           = initialConditions/non-natural/original/1999/avgDischargeShort_1999-12-31.map
m2tDischargeLongIni            = initialConditions/non-natural/original/1999/m2tDischargeLong_1999-12-31.map
avgBaseflowLongIni             = initialConditions/non-natural/original/1999/avgBaseflowLong_1999-12-31.map
riverbedExchangeIni            = initialConditions/non-natural/original/1999/riverbedExchange_1999-12-31.map
avgLakeReservoirInflowShortIni = initialConditions/non-natural/original/1999/avgLakeReservoirInflowShort_1999-12-31.map
avgLakeReservoirOutflowLongIni = initialConditions/non-natural/original/1999/avgLakeReservoirOutflowLong_1999-12-31.map
# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = initialConditions/non-natural/original/1999/timestepsToAvgDischarge_1999-12-31.map
# Note that:
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

[reportingOptions]
# output files that will be written in the disk in netcdf files:
outDailyTotNC = discharge

outMonthTotNC = gwRecharge,totalGroundwaterAbstraction,groundwaterAbsReturnFlow,totalRunoff,baseflow,totalEvaporation,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,runoff,actualET
outMonthAvgNC = accuBaseflow,discharge,gwRecharge,totalGroundwaterAbstraction,groundwaterAbsReturnFlow,totalRunoff,snowCoverSWE,fractionTotalEvaporation,fracSurfaceWaterAllocation,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness,satDegUpp,satDegLow,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal
outMonthEndNC = storGroundwater,storGroundwaterFossil,totalActiveStorageThickness,totalWaterStorageThickness

outAnnuaTotNC = gwRecharge,totalRunoff,baseflow,totalEvaporation,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,totalGroundwaterAbstraction,totalAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,runoff,actualET
outAnnuaAvgNC = accuBaseflow,storGroundwater,storGroundwaterFossil,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness,discharge,fractionTotalEvaporation
outAnnuaEndNC = storGroundwater,storGroundwaterFossil,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness

# netcdf format and zlib setup
formatNetCDF = NETCDF4
zlib = True

